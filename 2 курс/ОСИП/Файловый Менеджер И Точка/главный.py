from pathlib import Path as Путь

превратить_въ_букву = str
вводъ = input
длина = len
напечатать_въ_газетѣ = print
Ошибка_уже_существующаго_предмета = FileExistsError
открыть = open
Ошибка_иностраннаго_вліянія = UnicodeError


class Цвѣта:
    заголовокъ  = '\033[95m'
    хорошо_синій  = '\033[94m'
    хорошо_зеленый = '\033[92m'
    предупрежденіе  = '\033[93m'
    неудача = '\033[91m'
    конецъ_цвѣта = '\033[0m'
    жирный = '\033[1m'
    UNDERLINE = '\033[4m'


def извѣстіе_объ_ошибкѣ(письмена):
    """
    Показываетъ вашему величеству ошибки холопскія красною краской
    """
    напечатать_въ_газетѣ(Цвѣта.неудача, письмена, Цвѣта.конецъ_цвѣта)


def поменять_место(текущее_мѣсто , нужное_намъ_мѣсто =''):
    if not нужное_намъ_мѣсто:
        return Путь.home()

    новое_мѣсто = текущее_мѣсто / нужное_намъ_мѣсто

    if not новое_мѣсто.exists():
        извѣстіе_объ_ошибкѣ('Путь "{}" не существуетъ, ваше величество'.format(новое_мѣсто))
    elif not новое_мѣсто.is_dir():
        извѣстіе_объ_ошибкѣ('"{}" не является мѣстомъ'.format(новое_мѣсто))
    else:
        текущее_мѣсто = новое_мѣсто
    return текущее_мѣсто.resolve()


def настоящее_мѣсто(текущее_мѣсто):
    """
    Показываетъ вашему величеству настоящее мѣсто
    """
    напечатать_въ_газетѣ(превратить_въ_букву(текущее_мѣсто))


def создать_место(текущее_мѣсто, нужное_намъ_мѣсто):

    новое_мѣсто = текущее_мѣсто / нужное_намъ_мѣсто
    try:
        Путь.mkdir(новое_мѣсто)
    except Ошибка_уже_существующаго_предмета:
        извѣстіе_объ_ошибкѣ('Мѣсто  "{}" уже существуетъ у насъ '.format(превратить_въ_букву(новое_мѣсто)))


def провести_перепись(текущее_мѣсто):
    """
    Списокъ всѣхъ предметовъ и каталоговъ въ данномъ мѣстѣ
    """

    for ф in текущее_мѣсто.iterdir():
        if ф.is_dir():
            напечатать_въ_газетѣ(Цвѣта.хорошо_зеленый, ф.parts[-1 :][0], Цвѣта.конецъ_цвѣта)
        else:
            напечатать_въ_газетѣ(ф.parts[-1 :][0])


def изваять(текущее_мѣсто, имя_предмета):
    новое_мѣсто = текущее_мѣсто / имя_предмета
    открыть(превратить_въ_букву(новое_мѣсто), 'w')


def кошка(текущее_мѣсто, имя_предмета):
    """
    Открываетъ и выводитъ предметъ съ именемъ имя_предмета въ мѣстѣ текущее_мѣсто
    """
    новый_предметъ = текущее_мѣсто / имя_предмета
    if not новый_предметъ.exists():
        извѣстіе_объ_ошибкѣ('Предметъ "{}" не существуетъ, ваше величество'.format(превратить_въ_букву(новый_предметъ)))
    elif not новый_предметъ.is_file():
        извѣстіе_объ_ошибкѣ('{} не является предметомъ'.format(превратить_въ_букву(новый_предметъ)))
    else:
        with новый_предметъ.open() as предметъ:
            try:
                напечатать_въ_газетѣ(*предметъ.readlines(), end='')
                напечатать_въ_газетѣ()
            except Ошибка_иностраннаго_вліянія as ошибка:
                напечатать_въ_газетѣ(ошибка)
                извѣстіе_объ_ошибкѣ("Ошибка во время прочтенія")


def главный():
    текущее_мѣсто = Путь.home().resolve()
    while True:
        царскій_указъ = вводъ('Текущая директорія :{}$ '.format(текущее_мѣсто))
        царскій_указъ = царскій_указъ.split()

        if длина(царскій_указъ) < 1:
            continue
        if царскій_указъ[0] == 'поменять_место':
            if длина(царскій_указъ) == 2:
                текущее_мѣсто = поменять_место(текущее_мѣсто, царскій_указъ[1])
            elif длина(царскій_указъ) == 1:
                текущее_мѣсто = поменять_место(текущее_мѣсто)
            else:
                извѣстіе_объ_ошибкѣ('Неправильное количество аргументовъ ')

        elif царскій_указъ[0] == 'текущее_место':
            if not длина(царскій_указъ) == 1:
                извѣстіе_объ_ошибкѣ('указ "текущее_место" не имѣетъ аргументовъ')
            else:
                настоящее_мѣсто(текущее_мѣсто)

        elif царскій_указъ[0] == 'создать_место':
            if not длина(царскій_указъ) == 2:
                извѣстіе_объ_ошибкѣ('Неправильное количество аргументовъ')
            else:
                создать_место(текущее_мѣсто, царскій_указъ[1])

        elif царскій_указъ[0] == 'провести_перепись':
            if not длина(царскій_указъ) == 1:
                извѣстіе_объ_ошибкѣ('указ "провести_перепись" не имѣетъ аргументовъ')
            else:
                провести_перепись(текущее_мѣсто)

        elif царскій_указъ[0] == 'изваять':
            if not длина(царскій_указъ) == 2:
                извѣстіе_объ_ошибкѣ('Неправильное количество аргументовъ')
            else:
                изваять(текущее_мѣсто, царскій_указъ[1])

        elif царскій_указъ[0] == 'кошка':
            if not длина(царскій_указъ) == 2:
                извѣстіе_объ_ошибкѣ('Неправильное количество аргументовъ')
            else:
                кошка(текущее_мѣсто, царскій_указъ[1])
        else:
            извѣстіе_объ_ошибкѣ('Иноземное словце "{}"'.format(царскій_указъ[0]))


if __name__ == '__main__':
    главный()
